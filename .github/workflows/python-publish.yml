name: Python Publish

on:
  push:
    tags:
      - "v*"
    branches:
      - main

env:
  CACHE_NUMBER: 1 # increase to reset cache manually

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: dev
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Miniforge3
          miniforge-version: latest
          auto-update-conda: true
          activate-environment: vlm-py310
          python-version: "3.10"
          use-mamba: true

      - name: Conda info
        run: conda info

      - name: Conda list
        run: conda list

      - uses: actions/cache@v3
        with:
          path: ~/.cache/envs/vlm-py310
          key: conda-py310-${{ hashFiles('requirements*.txt') }}-${{ hashFiles('pyproject.toml') }}-${{ env.CACHE_NUMBER }}
          restore-keys: |
            conda-py310-

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('requirements*.txt') }}-${{ hashFiles('pyproject.toml') }}-${{ env.CACHE_NUMBER }}
          restore-keys: |
            pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[test]'

      - name: Quality Check
        uses: pre-commit/action@v3.0.1
        continue-on-error: true

      - name: Run tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          VLM_API_URL: ${{ vars.VLM_API_URL }}
          VLM_API_KEY: ${{ secrets.VLM_API_KEY }}
        run: |
          make test

  publish:
    name: Publish
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: prod
    needs: test
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Miniforge3
          miniforge-version: latest
          auto-update-conda: true
          activate-environment: vlm-py310
          python-version: "3.10"
          use-mamba: true

      - name: Conda info
        run: conda info

      - name: Conda list
        run: conda list

      - uses: actions/cache@v3
        with:
          path: ~/.cache/envs/vlm-py310
          key: conda-py310-${{ hashFiles('requirements*.txt') }}-${{ hashFiles('pyproject.toml') }}-${{ env.CACHE_NUMBER }}
          restore-keys: |
            conda-py310-

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('requirements*.txt') }}-${{ hashFiles('pyproject.toml') }}-${{ env.CACHE_NUMBER }}
          restore-keys: |
            pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[test,build]'

      - name: Build package
        run: |
          python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Bump version
        if: success()
        run: |
          new_version=$(python scripts/bump_version.py vlmrun/hub/version.py patch)

          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          git add vlmrun/hub/version.py
          git commit -m "Bump version to ${new_version} [skip ci]"
          git tag -a "v${new_version}" -m "Version ${new_version}"
          git push origin main
          git push origin "v${new_version}"
